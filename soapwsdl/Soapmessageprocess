(1) solution 1
import javax.xml.soap.SOAPElement;
import javax.xml.soap.SOAPEnvelope;
import javax.xml.soap.SOAPException;
import javax.xml.soap.SOAPHeader;
import javax.xml.soap.SOAPMessage;
import javax.xml.ws.handler.MessageContext;
import javax.xml.ws.handler.soap.SOAPHandler;
import javax.xml.ws.handler.soap.SOAPMessageContext;

https://tomee.apache.org/examples-trunk/webservice-handlerchain/
https://tomee.apache.org/examples-trunk/


handler-chain-vinvalidation.xml
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<javaee:handler-chains 
     xmlns:javaee="http://java.sun.com/xml/ns/javaee" 
     xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <javaee:handler-chain>
    <javaee:handler>
      <javaee:handler-class> com.info.esb.vinvalidation.handler.VinValidationHeaderHandler</javaee:handler-class>
    </javaee:handler>
  </javaee:handler-chain>
</javaee:handler-chains>

put the handler-chain-vinvalidation.xml under classpath or should under classpath same where is the class using @HandlerChain package path in resouce folder.

@HandlerChain(file="classpath: /handler-chain-vinvalidation.xml")


public class VinValidationHeaderHandler implements SOAPHandler<SOAPMessageContext> {}



(2) solution 2


import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Set;
import java.util.TimeZone;

import javax.xml.soap.SOAPElement;
import javax.xml.soap.SOAPEnvelope;
import javax.xml.soap.SOAPException;
import javax.xml.soap.SOAPHeader;
import javax.xml.soap.SOAPMessage;
import javax.xml.ws.handler.MessageContext;
import javax.xml.ws.handler.soap.SOAPHandler;
import javax.xml.ws.handler.soap.SOAPMessageContext;

import org.apache.camel.CamelContext;
import org.apache.camel.component.jasypt.JasyptPropertiesParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


public class HeaderHandler implements SOAPHandler<SOAPMessageContext> {

	private static final Logger LOGGER = LoggerFactory
			.getLogger(HeaderHandler.class);
	
	private static final String WSSE = "wsse";

	private static final String WSSECURITY_NAMESPACE = "http://schemas.xmlsoap.org/soap/header/";

	public boolean handleMessage(SOAPMessageContext smc) {

		Boolean outboundProperty = (Boolean) smc
				.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY);

		if (null != outboundProperty && outboundProperty.booleanValue()) {

			SOAPMessage message = smc.getMessage();

			try {

				SOAPEnvelope envelope = smc.getMessage().getSOAPPart()
						.getEnvelope();
				SOAPHeader header = envelope.getHeader();
				if (header == null)
					header = envelope.addHeader();
				SOAPElement security = header.addChildElement("Security", WSSE,
						WSSECURITY_NAMESPACE);

				SOAPElement usernameToken = security.addChildElement(
						"UsernameToken", WSSE);
				usernameToken.setAttribute("xmlns:wsu", WSSECURITY_NAMESPACE);

				SOAPElement username = usernameToken.addChildElement(
						"SecurityString", WSSE);

				username.addTextNode((String) smc
						.get(SuretyConstants.SURETY_STRING));

				logSOAPMessage(message);

			} catch (SOAPException se) {
				LOGGER.error(se.getMessage(), se);
			} catch (Exception e) {
				LOGGER.error(e.getMessage(), e);
			}

		} else {

			// This handler does nothing with the response from the Web
			// Service so
			// we just print out the SOAP message.
			SOAPMessage message = smc.getMessage();

		}

		return outboundProperty;

	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see javax.xml.ws.handler.soap.SOAPHandler#getHeaders() Added by Roopesh
	 * to log the soap messages in log file
	 */
	private void logSOAPMessage(SOAPMessage message) {
		ByteArrayOutputStream bout = new ByteArrayOutputStream();
		try {
			message.writeTo(bout);
			String msg = bout.toString("UTF-8");

		} catch (SOAPException e) {
			LOGGER.error(e.getMessage(), e);
		} catch (IOException e) {
			LOGGER.error(e.getMessage(), e);
		}

	}

	public Set getHeaders() {
		// throw new UnsupportedOperationException("Not supported yet.");
		return null;
	}

	public boolean handleFault(SOAPMessageContext context) {
		// throw new UnsupportedOperationException("Not supported yet.");
		return true;
	}

	public void close(MessageContext context) {
		// throw new UnsupportedOperationException("Not supported yet.");
	}
}





	<jaxws:client address="{{ABC_SURETY_BROKER_CHANGE_URL}}"
		id="abcSuretyBrokerChangeProxy" serviceClass="ca.xenex.surety.ejb.webservice.BrokerChange">
		<jaxws:handlers>
			<bean class="com.info.ca.handler.HeaderHandler" />
		</jaxws:handlers>
		<jaxws:features>
			<bean class="org.apache.cxf.feature.LoggingFeature" />
		</jaxws:features>
	</jaxws:client>
