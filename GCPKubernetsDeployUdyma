Diagrams shown in the course are available in this repo:

https://github.com/StephenGrider/DockerCasts/tree/master/diagrams

Clone down the entire Github repo to your computer. Go to draw.io, then choose "Open Existing Diagram" and use the file explorer to open a diagram file from your computer.

Source code:
https://github.com/StephenGrider/DockerCasts
https://www.udemy.com/course/microservices-with-node-js-and-react/?couponCode=CBD1840C8AEA8BF53C59

1) GCP platform:
- gcloud components update kubectl
// - gcloud auth activate-service-account --key-file service-account.json
- gcloud config set project abstract-dragon-284619
- gcloud config set compute/zone us-central1-c
- gcloud container clusters get-credentials cluster-1

2) Install Ingress service
  1) install helm
    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    chmod 700 get_helm.sh
    ./get_helm.sh
	
 kubectl create serviceaccount --namespace kube-system tiller
  //tiller is serviceaccount name
  //when assign it a Role should using namespace:name
  //when using it can direct using the 'name'
  kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller  
  ??? kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'  
  helm init --service-account tiller --upgrade
		
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm install my-release ingress-nginx/ingress-nginx

3) app deploy
   upload *.yaml
   kubectl apply -f ./
   
   
4) GCP Create service account:
google service account:
   I AM --> serviceaccount-->createNew--kubeernetengin-->add role--> kubernet engin--->kubernet admin  --> key-tab "add key"
   
5) Traivs GCP decode service account json

   docker run -it -v $(pwd):/app ruby:2.4.0 sh  //--copy the serviceaccount.json to host current folder in the docker container mapping ot /app
   gem install travis --no-rdoc --no-ri
   travis login --github-token YOUR_PERSONAL_TOKEN --pro  //github token
   //travis encrypt-file service-account.json -r USERNAME/REPO --pro
   travis encrypt-file service-account.json -r jbuilder1993@gmail.com/hcm  --pro //github project
   
===================================================================================================================================================  
The Travis login now requires a Github Token. Please follow these instructions to create a Personal Token for Travis to use here:
https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token
===================================================================================================================================================
travis  encode the servieaccount.json
docker run -it -v $(pwd):/app ruby:3.0 sh
gem install travis 
travis login --github-token 3be601bcf2ee42c1cb1afeb7d52adf5d682e6a1f --pro
//https://www.travis-ci.com/github/jbuider1993
travis encrypt-file ./app/hcmserviceaccount.json -r jbuider1993/autoCode2  --pro
travis encrypt-file ./app/hcmserviceaccount.json -r jbuider1993/HCM  --pro

travis encrypt-file ./app/googlegcpaccount.json -r jbuider1993/hcmtest  --pro
---->>>
Please add the following to your build script (before_install stage in your .travis.yml, for instance):

    openssl aes-256-cbc -K $encrypted_177f44202b14_key -iv $encrypted_177f44202b14_iv -in googlegcpaccount.json.enc -out googlegcpaccount.json -d

Pro Tip: You can add it automatically by running with --add.
<<<----

Make sure to add googlegcpaccount.json.enc to the git repository.
Make sure not to add googlegcpaccount.json to the git repository.
Commit all changes to your .travis.yml.



-------------------------------------------------
travis add gitbuh repo
-------------------------------------------------
https://travis-ci.com/account/repositories
---> Migrate Tab--->"Activate all repositories using GitHub Apps"



=========================================================================
build and deploy from linux
=========================================================================
git clone https://github_token@github.com/jbuider1993/HCM.git
cd ./HCM
export SHA=$(git rev-parse HEAD)
export CLOUDSDK_CORE_DISABLE_PROMPTS=1
mvn clean install
docker login -u docker_user -p password

docker build -f Dockerfile -t hcm-service:$SHA .
docker tag hcm-service:$SHA jbuilder1993/hcm-service:$SHA
docker push jbuilder1993/hcm-service:$SHA

docker build -f Dockerfile -t hcm-service .
docker tag hcm-service jbuilder1993/hcm-service
docker push jbuilder1993/hcm-service
=========================================================================
