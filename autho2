


https://www.javacodegeeks.com/2019/03/centralized_-authorization_-oauth2_jwt.html

Use the following command to export the public key from the generated JKS:

$ keytool -list -rfc --keystore keystore.jks | openssl x509 -inform pem -pubkey -noout
A sample response look like this:

-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWI2jtKwvf0W1hdMdajc
h+mFx9FZe3CZnKNvT/d0+2O6V1Pgkz7L2FcQx2uoV7gHgk5mmb2MZUsy/rDKj0dM
fLzyXqBcCRxD6avALwu8AAiGRxe2dl8HqIHyo7P4R1nUaea1WCZB/i7AxZNAQtcC
cSvMvF2t33p3vYXY6SqMucMD4yHOTXexoWhzwRqjyyC8I8uCYJ+xIfQvaK9Q1RzK
Rj99IRa1qyNgdeHjkwW9v2Fd4O/Ln1Tzfnk/dMLqxaNsXPw37nw+OUhycFDPPQF/
H4Q4+UDJ3ATf5Z2yQKkUQlD45OO2mIXjkWprAmOCi76dLB2yzhCX/plGJwcgb8XH
EQIDAQAB
-----END PUBLIC KEY-----
Copy it to a public.txt file and place it at /src/main/resources and then configure your application.yml pointing to this file:
security:
  jwt:
    public-key: classpath:public.txt
Now let’s add the Spring’s configuration for the resource server.

How to create own key store and corresponding public key file
generate keystore

keytool -genkeypair -alias jwt-test -keyalg RSA \
-dname "CN=jwt,OU=jtw,O=jtw,L=zurich,S=zurich,C=CH" \
-keypass TODOchange \ 
-keystore jwt-test.jks \ 
-storepass TODOchange
or in one step: export public key

keytool -list -rfc --keystore jwt-test.jks | openssl x509 -inform pem -pubkey
copy paste public key part into public key file: public.cert



https://www.devglan.com/spring-security/spring-boot-security-oauth2-example

https://howtodoinjava.com/spring-boot2/oauth2-auth-server/

https://medium.com/@buddhiprabhath/spring-boot-oauth-2-0-separating-authorization-service-and-resource-service-1641ebced1f0

https://bezkoder.com/spring-boot-jwt-authentication/

https://www.baeldung.com/spring-security-oauth-jwt

https://github.com/melardev/JavaSpringBootOAuth2JwtCrudPagination

https://stackoverflow.com/questions/45985310/customize-auth-error-from-spring-security-using-oauth2

*******************************
this is an works example for catch the 401 and 403 exception:
https://github.com/melardev/JavaSpringBootOAuth2JwtCrudPagination

**********
this is for the 401 chrome, by default chrome will redirect 401, and the client code can't recive the 401.
Add   'X-Requested-With': 'XMLHttpRequest', in request header
https://stackoverflow.com/questions/54820443/how-to-prevent-login-prompt-in-chrome-for-401-unauthorization-error-for-basic-au

https://docs.spring.io/spring-security/site/docs/3.2.0.CI-SNAPSHOT/reference/html/appendix-namespace.html#nsa-frame-options


google auto code
=============================================
https://github.com/google/auto
=============================================



